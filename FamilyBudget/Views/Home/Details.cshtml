@using FamilyBudget.Models.View.Enums
@model FamilyBudget.Models.View.Details.HomeProjectDetailsModel

@{
    ViewData["Title"] = "Details";
}


<div id="finOperationDeleteModal" class="modal fade">
    <div id="finOperationDeleteDialogContent" class="modal-dialog modal-dialog-centered modal-lg"></div>
</div>

<div id="finOperationEditModal" class="modal fade">
    <div id="finOperationEditDialogContent" class="modal-dialog modal-dialog-centered"></div>
</div>


<div id="addFinOpModal" class="modal fade">
    <div id="addFinOpDialogContent" class="modal-dialog modal-dialog-centered"></div>
</div>
<div class="card">
    <div class="card-header pt-1 pb-1 pr-1">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="flex-grow-1 mt-2">@Model.ProjectName</h3>

            <a asp-controller="Modal" asp-action="AddFinOperation" asp-route-id="@Model.FilterViewModel.SelectedProject" asp-route-type="@FinType.Income"
               class="btn btn-warning addIncome m-1 align">
                <i class="bi bi-pencil-square mr-1"></i>
                Добавить доход
            </a>

            <a asp-controller="Modal" asp-action="AddFinOperation" asp-route-id="@Model.FilterViewModel.SelectedProject" asp-route-type="@FinType.Charge"
               class="btn btn-info addCharge m-1 align">
                <i class="bi bi-pencil-square mr-1"></i>
                Добавить расход
            </a>

            <a asp-action="Index"class="btn btn-secondary m-1 pull-right">
                К списку проектов
            </a>
        </div>

    </div>
    <div class="card-body pt-2 pb-2">
        <form>
            <div class="row">
                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">Тип</label>
                    <select type="submit" class="form-control" name="finType"
                            asp-for="@Model.FilterViewModel.SelectedFinType"
                            asp-items="@Model.FilterViewModel.FinTypes"
                            onchange="this.form.submit()"></select>
                </div>

                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">Член семьи</label>
                    <select type="submit" asp-for="@Model.FilterViewModel.SelectedProjectMember" class="form-control" name="projectMember"
                            asp-items="@Model.ProjectMembers" onchange="this.form.submit()"></select>
                </div>

                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">Категория</label>
                    <input type="text" id="inputCategory" data-projectId="@Model.FilterViewModel.SelectedProject" autocomplete="off" placeholder="категория"
                           class="form-control" name="category" value="@Model.FilterViewModel.SelectedCategory" />
                </div>

                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">Дата с</label>
                    <input class="form-control" name="beginDate" asp-for="@Model.FilterViewModel.SelectedBeginDate" type="date" onchange="this.form.submit()">
                </div>

                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">Дата до</label>
                    <input class="form-control" name="endDate" asp-for="@Model.FilterViewModel.SelectedEndDate" type="date" onchange="this.form.submit()">
                </div>
                <div class="col-2 pr-1 pl-1">
                    <label class="form-label mb-1 ml-1">&nbsp;</label>
                    <a href="@Model.FilterViewModel.SelectedProject" class="form-control btn btn-danger">
                        Очистить фильтры
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>
@if (!Model.IsEmpty)
{
    <div class="row">
        @if (Model.FilterViewModel.SelectedFinType == null)
        {
            <div class="col-4"></div>
            <div class="col-4">
                <canvas id="PieByFinOp"></canvas>
            </div>
            <div class="col-4"></div>
        }
        else
        {
            <div class="col-1"></div>
            <div class="col-4">
                <canvas id="PieByCategory"></canvas>
            </div>
            <div class="col-2"></div>
            <div class="col-4">
                <canvas id="PieByProjectMember"></canvas>
            </div>
            <div class="col-1"></div>
        }
    </div>
}
<div class="card">
    @if (!Model.IsEmpty)
    {
        <table class="table">
            <a asp-action="Details"
            asp-route-id="@(Model.FilterViewModel.SelectedProject)"
            asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
            asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)">
            <thead>
                <tr>
                    <th>
                        <a class="btn @(Model.SortViewModel.finTypeSort ? "btn-primary" : "btn-light")"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.FinType)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.FinType) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Тип
                            @if (@Model.SortViewModel.finTypeSort)
                            {
                                <i class="bi @(Model.SortViewModel.isAscending ? "bi-sort-down" : "bi-sort-up")"></i>
                            }
                            else
                            {
                                <i class="bi bi-filter-left"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn @(Model.SortViewModel.projectMemberSort ? "btn-primary" : "btn-light")"
                       
                       asp-route-sortmodel="@(FinOperationSortModelEnum.ProjectMember)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.ProjectMember) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Член семьи
                            @if (@Model.SortViewModel.projectMemberSort)
                            {
                                <i class="bi @(Model.SortViewModel.isAscending ? "bi-sort-alpha-down" : "bi-sort-alpha-up")"></i>
                            }
                            else
                            {
                                <i class="bi bi-filter-left"></i>
                            }
                        </a>
                    </th>          
                    <th>
                        <a class="btn @(Model.SortViewModel.categorySort ? "btn-primary" : "btn-light")"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.Category)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.Category) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Категория
                            @if (@Model.SortViewModel.categorySort)
                            {
                                <i class="bi @(Model.SortViewModel.isAscending ? "bi-sort-alpha-down" : "bi-sort-alpha-up")"></i>
                            }
                            else
                            {
                                <i class="bi bi-filter-left"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn @(Model.SortViewModel.valueSort ? "btn-primary" : "btn-light")"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.Value)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.Value) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Сумма
                            @if (@Model.SortViewModel.valueSort)
                            {
                                <i class="bi @(Model.SortViewModel.isAscending ? "bi-sort-numeric-down" : "bi-sort-numeric-up")"></i>
                            }
                            else
                            {
                                <i class="bi bi-filter-left"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn @(Model.SortViewModel.createTimeSort ? "btn-primary" : "btn-light")"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.CreateTime)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.CreateTime) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Дата
                            @if (@Model.SortViewModel.createTimeSort)
                            {
                                <i class="bi @(Model.SortViewModel.isAscending ? "bi-sort-numeric-down" : "bi-sort-numeric-up")"></i>
                            }
                            else
                            {
                                <i class="bi bi-filter-left"></i>
                            }
                        </a>
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (FinOperation fo in Model.FinOperations)
                {
                    <tr>
                        <td class="col-2">
                            @if (fo.FinType == FinType.Charge)
                            {
                                <label>Расход</label>
                            }
                            else
                            {
                                <label>Доход</label>
                            }
                        </td>                      
                        <td class="col-3">
                            @if (fo.ProjectMember != null)
                            {
                                <label>@fo.ProjectMember.NameInProject</label>
                            }
                            else
                            {
                                <label>Семья</label>
                            }
                        </td>
                         <td class="col-3">
                            @if (fo.Category != null)
                            {
                                <label>@fo.Category.Name</label>
                            }
                            else
                            {
                                <label>—</label>
                            }
                        </td>
                        <td class="col-2">@fo.Value</td>
                        <td class="col-2">
                            @if (@fo.CreateTime.Date == DateTime.Today.Date)
                            {
                                <label>Сегодня</label>
                            }
                            else if (@fo.CreateTime.Date == DateTime.Today.AddDays(-1).Date)
                            {
                                <label>Вчера</label>
                            }
                            else if (@fo.CreateTime.Date.Year == DateTime.Now.Year)
                            {
                                <label>@fo.CreateTime.ToString("d MMMM")</label>
                            }
                            else
                            {
                                <label>@fo.CreateTime.ToString("d MMMM yyyy")</label>
                            }
                        </td>
                        <td id="@fo.Id" class="bi bi-pencil finOperationEdit" style="cursor: pointer"></td>
                        <td id="@fo.Id" class="bi bi-x-lg finOperationDelete" style="cursor: pointer"></td>
                    </tr>
                }
            </tbody>
        </a>
        </table>


        <ul class="pagination justify-content-center mb-2">
            <li class="page-item @(!Model.PageViewModel.HasPreviousPage ? "disabled" : "")">
                <a asp-action="Details"
               asp-route-id="@(Model.FilterViewModel.SelectedProject)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
               asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
               asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
               asp-route-sortmodel="@(Model.SortViewModel.CurrentSortModel)"
               asp-route-sortdir="@(Model.SortViewModel.CurrentSortDir)"
               class="page-link">
                    Назад
                </a>
            </li>
            <li class="page-item @(!Model.PageViewModel.HasNextPage ? "disabled" : "")">
                <a asp-action="Details"
               asp-route-id="@(Model.FilterViewModel.SelectedProject)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
               asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
               asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
               asp-route-sortmodel="@(Model.SortViewModel.CurrentSortModel)"
               asp-route-sortdir="@(Model.SortViewModel.CurrentSortDir)"
               class="page-link">
                    Вперед
                </a>
            </li>
        </ul>
    }
    else
    {
        <h4 class="text-center p-5">Финансовые операции не найдено.</h4>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const CHART_COLORS = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
    };

    const NAMED_COLORS = [
        CHART_COLORS.red,
        CHART_COLORS.orange,
        CHART_COLORS.yellow,
        CHART_COLORS.green,
        CHART_COLORS.blue,
        CHART_COLORS.purple,
        CHART_COLORS.grey,
    ];

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByCategory.Select(x => x.Name).ToList())),
            datasets: [{
                label: 'PieByCategory',
                data: @Html.Raw(Json.Serialize(Model.PieByCategory.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'По категориям'
                    }
                }
            },
        };

        const PieByCategory = document.getElementById('PieByCategory')

        if (PieByCategory) {
            new Chart(
                PieByCategory,
                config
            );
        }
    }

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByProjectMember.Select(x => x.Name).ToList())),
            datasets: [{
                label: 'PieByProjectMember',
                data: @Html.Raw(Json.Serialize(Model.PieByProjectMember.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'По членам семьи'
                    }
                }
            },
        };

        const PieByProjectMember = document.getElementById('PieByProjectMember')

        if (PieByProjectMember) {
            new Chart(
                PieByProjectMember,
                config
            );
        }
    }

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByFinOp.Select(x => x.Name).ToList())),
            datasets: [{
                data: @Html.Raw(Json.Serialize(Model.PieByFinOp.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'По типу финансовой операции'
                    }
                }
            },
        };

        const PieByFinOp = document.getElementById('PieByFinOp')

        if (PieByFinOp) {
            new Chart(
                PieByFinOp,
                config
            );
        }
    }
</script>



@section scripts
{
<script type="text/javascript">

    $(document).ready(function () {

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".addCharge").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#addFinOpDialogContent').html(data);
                    $('#addFinOpModal').modal('show');
                });
            });
        })

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".addIncome").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#addFinOpDialogContent').html(data);
                    $('#addFinOpModal').modal('show');
                });
            });
        });

        $("#inputCategory").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Categories/SearchCategories/",
                    data: {
                        "id": $("#inputCategory").attr("data-projectId"),
                        "term": request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                });
            },
            select: function (event, ui) {
                this.value = ui.item.value;
                this.form.submit();
            }
        });

        $(".finOperationDelete").click(function (e) {
            e.preventDefault();
            $.get("/Modal/FinOperationDelete/" + this.id, function (data) {
                $('#finOperationDeleteDialogContent').html(data);
                $('#finOperationDeleteModal').modal('show');
            });
        });

        $(".finOperationEdit").click(function (e) {
            e.preventDefault();
            $.get("/Modal/FinOperationEdit/" + this.id, function (data) {
                $('#finOperationEditDialogContent').html(data);
                $('#finOperationEditModal').modal('show');
            });
        });
    });
</script>
}


